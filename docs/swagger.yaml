basePath: /
definitions:
  Badge:
    properties:
      color:
        type: string
      created_at:
        type: string
      icon:
        type: string
      id:
        type: integer
      text:
        type: string
    type: object
  Collaboration:
    properties:
      badges:
        items:
          $ref: '#/definitions/Badge'
        type: array
      city:
        type: string
      country:
        type: string
      country_code:
        type: string
      created_at:
        type: string
      description:
        type: string
      hidden_at:
        type: string
      id:
        type: integer
      is_payable:
        type: boolean
      opportunity:
        $ref: '#/definitions/Opportunity'
      opportunity_id:
        type: integer
      published_at:
        type: string
      requests_count:
        type: integer
      title:
        type: string
      updated_at:
        type: string
      user:
        $ref: '#/definitions/UserProfile'
      user_id:
        type: integer
    type: object
  CollaborationRequest:
    properties:
      collaboration_id:
        type: integer
      created_at:
        type: string
      id:
        type: integer
      message:
        type: string
      status:
        type: string
      updated_at:
        type: string
      user_id:
        type: integer
    type: object
  CreateCollaboration:
    properties:
      badge_ids:
        items:
          type: integer
        type: array
      city:
        type: string
      country:
        maxLength: 255
        type: string
      country_code:
        maxLength: 2
        type: string
      description:
        maxLength: 1000
        type: string
      is_payable:
        type: boolean
      opportunity_id:
        type: integer
      title:
        maxLength: 255
        type: string
    required:
    - badge_ids
    - country
    - country_code
    - description
    - opportunity_id
    - title
    type: object
  CreateCollaborationRequest:
    properties:
      message:
        maxLength: 1000
        type: string
    required:
    - message
    type: object
  CreateUserCollaboration:
    properties:
      message:
        maxLength: 1000
        type: string
    required:
    - message
    type: object
  Opportunity:
    properties:
      color:
        type: string
      created_at:
        type: string
      description:
        type: string
      icon:
        type: string
      id:
        type: integer
      text:
        type: string
    type: object
  UpdateUserRequest:
    properties:
      avatar_url:
        type: string
      badge_ids:
        items:
          type: integer
        type: array
      city:
        type: string
      country:
        maxLength: 255
        type: string
      country_code:
        maxLength: 2
        type: string
      description:
        maxLength: 1000
        type: string
      first_name:
        type: string
      last_name:
        type: string
      opportunity_ids:
        items:
          type: integer
        type: array
      title:
        maxLength: 255
        type: string
    required:
    - avatar_url
    - badge_ids
    - country
    - country_code
    - description
    - first_name
    - last_name
    - opportunity_ids
    - title
    type: object
  User:
    properties:
      avatar_url:
        type: string
      badges:
        items:
          $ref: '#/definitions/Badge'
        type: array
      chat_id:
        type: integer
      city:
        type: string
      country:
        type: string
      country_code:
        type: string
      created_at:
        type: string
      description:
        type: string
      first_name:
        type: string
      followers_count:
        type: integer
      following_count:
        type: integer
      hidden_at:
        type: string
      id:
        type: integer
      is_following:
        type: boolean
      language_code:
        type: string
      last_name:
        type: string
      notifications_enabled_at:
        type: string
      opportunities:
        items:
          $ref: '#/definitions/Opportunity'
        type: array
      peatch_points:
        type: integer
      published_at:
        type: string
      requests_count:
        type: integer
      title:
        type: string
      updated_at:
        type: string
      username:
        type: string
    type: object
  UserPreview:
    properties:
      avatar_url:
        type: string
    type: object
  UserProfile:
    properties:
      avatar_url:
        type: string
      badges:
        items:
          $ref: '#/definitions/Badge'
        type: array
      city:
        type: string
      country:
        type: string
      country_code:
        type: string
      created_at:
        type: string
      description:
        type: string
      first_name:
        type: string
      followers_count:
        type: integer
      following_count:
        type: integer
      id:
        type: integer
      is_following:
        type: boolean
      last_name:
        type: string
      opportunities:
        items:
          $ref: '#/definitions/Opportunity'
        type: array
      title:
        type: string
      username:
        type: string
    type: object
  UserProfileShort:
    properties:
      avatar_url:
        type: string
      first_name:
        type: string
      id:
        type: integer
      is_following:
        type: boolean
      last_name:
        type: string
      title:
        type: string
      username:
        type: string
    type: object
  UserWithToken:
    properties:
      token:
        type: string
      user:
        $ref: '#/definitions/User'
    type: object
host: localhost:8080
info:
  contact: {}
  description: This is a sample server ClanPlatform server.
  title: Peatch API
  version: "1.0"
paths:
  /api/auth/telegram:
    get:
      consumes:
      - application/json
      parameters:
      - description: Query ID
        in: query
        name: query_id
        required: true
        type: string
      - description: User
        in: query
        name: user
        required: true
        type: string
      - description: Auth date
        in: query
        name: auth_date
        required: true
        type: string
      - description: Hash
        in: query
        name: hash
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/UserWithToken'
      summary: Telegram auth
      tags:
      - auth
  /api/badges:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/Badge'
            type: array
      summary: List badges
      tags:
      - badges
  /api/badges/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: Badge ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Badge'
      summary: Get badge
      tags:
      - badges
  /api/collaborations:
    get:
      consumes:
      - application/json
      parameters:
      - description: Page
        in: query
        name: page
        type: integer
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Order by
        in: query
        name: order
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/Collaboration'
            type: array
      summary: List collaborations
      tags:
      - collaborations
    post:
      consumes:
      - application/json
      parameters:
      - description: Collaboration data
        in: body
        name: collaboration
        required: true
        schema:
          $ref: '#/definitions/CreateCollaboration'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/Collaboration'
      summary: Create collaboration
      tags:
      - collaborations
  /api/collaborations/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Collaboration ID
        in: path
        name: id
        required: true
        type: integer
      - description: Collaboration data
        in: body
        name: collaboration
        required: true
        schema:
          $ref: '#/definitions/CreateCollaborationRequest'
      produces:
      - application/json
      responses:
        "204":
          description: No Content
      summary: Delete collaboration
      tags:
      - collaborations
    get:
      consumes:
      - application/json
      parameters:
      - description: Collaboration ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Collaboration'
      summary: Get collaboration
      tags:
      - collaborations
    put:
      consumes:
      - application/json
      parameters:
      - description: Collaboration data
        in: body
        name: collaboration
        required: true
        schema:
          $ref: '#/definitions/Collaboration'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Collaboration'
      summary: Update collaboration
      tags:
      - collaborations
  /api/collaborations/{id}/hide:
    put:
      consumes:
      - application/json
      parameters:
      - description: Collaboration ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Hide collaboration
      tags:
      - collaborations
  /api/collaborations/{id}/publish:
    put:
      consumes:
      - application/json
      parameters:
      - description: Collaboration ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Publish collaboration
      tags:
      - collaborations
  /api/collaborations/{id}/requests:
    get:
      consumes:
      - application/json
      parameters:
      - description: Collaboration ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/CollaborationRequest'
      summary: Find collaboration request
      tags:
      - collaborations
  /api/collaborations/{id}/show:
    put:
      consumes:
      - application/json
      parameters:
      - description: Collaboration ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Show collaboration
      tags:
      - collaborations
  /api/opportunities:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/Opportunity'
            type: array
      summary: List opportunities
      tags:
      - opportunities
  /api/users:
    get:
      consumes:
      - application/json
      parameters:
      - description: Page
        in: query
        name: page
        type: integer
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Order by
        in: query
        name: order
        type: string
      - description: Search
        in: query
        name: search
        type: string
      - description: Find similar
        in: query
        name: find_similar
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/User'
            type: array
      summary: List users
      tags:
      - users
    put:
      consumes:
      - application/json
      parameters:
      - description: User data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/UpdateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/User'
      summary: Update user
      tags:
      - users
  /api/users/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/User'
      summary: Get user
      tags:
      - users
  /api/users/{id}/collaborations/requests:
    get:
      consumes:
      - application/json
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/CollaborationRequest'
      summary: Find user collaboration request
      tags:
      - collaborations
  /api/users/{id}/followers:
    get:
      consumes:
      - application/json
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/UserProfileShort'
            type: array
      summary: Get user followers
      tags:
      - users
  /api/users/{id}/following:
    get:
      consumes:
      - application/json
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/UserProfileShort'
            type: array
      summary: Get user following
      tags:
      - users
  /api/users/{user_id}/collaborations:
    post:
      consumes:
      - application/json
      parameters:
      - description: User ID
        in: path
        name: user_id
        required: true
        type: integer
      - description: Collaboration data
        in: body
        name: collaboration
        required: true
        schema:
          $ref: '#/definitions/CreateUserCollaboration'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Collaboration'
      summary: Create user collaboration
      tags:
      - collaborations
  /api/users/{user_id}/hide:
    post:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "204":
          description: No Content
      summary: Hide user
      tags:
      - users
  /api/users/{user_id}/publish:
    post:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "204":
          description: No Content
      summary: Publish user
      tags:
      - users
  /api/users/{user_id}/show:
    post:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "204":
          description: No Content
      summary: Show user
      tags:
      - users
  /api/users/matching:
    get:
      consumes:
      - application/json
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/UserProfileShort'
            type: array
      summary: List matching profiles
      tags:
      - users
  /api/users/preview:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/UserPreview'
            type: array
      summary: List user preview
      tags:
      - users
  /users/{id}/follow:
    get:
      consumes:
      - application/json
      parameters:
      - description: Following User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
      summary: Delete user
      tags:
      - users
  /users/{id}/unfollow:
    get:
      consumes:
      - application/json
      parameters:
      - description: Following User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
      summary: Unfollow user
      tags:
      - users
swagger: "2.0"
