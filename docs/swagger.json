{
    "schemes": [
        "https"
    ],
    "swagger": "2.0",
    "info": {
        "description": "API Documentation for the Api Dating Project",
        "title": "Peatch API",
        "contact": {},
        "version": "1.0"
    },
    "host": "api.peatch.io",
    "paths": {
        "/admin/auth/telegram": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "operationId": "admin-telegram-auth",
                "parameters": [
                    {
                        "description": "Telegram Auth Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AdminTelegramAuthRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/AdminAuthResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/admin/badges": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "operationId": "admin-list-badges",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Badge"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "operationId": "admin-create-badge",
                "parameters": [
                    {
                        "description": "Badge data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreateBadgeRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/Badge"
                        }
                    }
                }
            }
        },
        "/admin/cities/{name}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "operationId": "admin-get-city-by-name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "City name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CityResponse"
                            }
                        }
                    }
                }
            }
        },
        "/admin/collaborations": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get a list of collaborations filtered by verification status",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "List collaborations by verification status",
                "operationId": "admin-list-collaborations",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Verification status (pending, verified, denied, blocked)",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number (default: 1)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Items per page (default: 20, max: 100)",
                        "name": "per_page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/CollaborationResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create a new collaboration for a user as admin",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Create collaboration as admin",
                "operationId": "admin-create-collaboration",
                "parameters": [
                    {
                        "description": "Collaboration data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AdminCreateCollaborationRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Collaboration"
                        }
                    }
                }
            }
        },
        "/admin/opportunities": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "operationId": "admin-list-opportunities",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Opportunity"
                            }
                        }
                    }
                }
            }
        },
        "/admin/users": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get a list of users filtered by verification status",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "List users by verification status",
                "operationId": "admin-list-users",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Verification status (pending, verified, denied, blocked)",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number (default: 1)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Items per page (default: 20, max: 100)",
                        "name": "per_page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/UserResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create a new user with optional fields as admin",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Create user as admin",
                "operationId": "admin-create-user",
                "parameters": [
                    {
                        "description": "User data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AdminCreateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/UserResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/admin/users/chat/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "operationId": "admin-get-user-by-chat-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Chat ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                }
            }
        },
        "/admin/users/{id}": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete a user and all their related data including collaborations and followers",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Delete user completely",
                "operationId": "admin-delete-user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/StatusResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/admin/users/{id}/collaborations": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "operationId": "admin-get-users-collaborations",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Collaboration"
                            }
                        }
                    }
                }
            }
        },
        "/admin/users/{id}/verify": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Change the verification status of a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Update user verification status",
                "operationId": "admin-update-user-verification",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "New verification status",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/VerificationUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/StatusResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/admin/users/{user_id}/collaborations/{collab_id}/verify": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Change the verification status of a collaboration",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Update collaboration verification status",
                "operationId": "admin-update-collaboration-verification",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Collaboration ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "New verification status",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/VerificationUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/StatusResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/admin/users/{username}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "operationId": "admin-get-user-by-username",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Username",
                        "name": "username",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                }
            }
        },
        "/api/badges": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "badges"
                ],
                "summary": "List badges",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/BadgeResponse"
                            }
                        }
                    }
                }
            }
        },
        "/api/badges/{id}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "badges"
                ],
                "summary": "Get badge",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Badge ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/BadgeResponse"
                        }
                    }
                }
            }
        },
        "/api/collaborations": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "collaborations"
                ],
                "summary": "List collaborations",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Order by",
                        "name": "order",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CollaborationResponse"
                            }
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "collaborations"
                ],
                "summary": "Create collaboration",
                "parameters": [
                    {
                        "description": "Collaboration data",
                        "name": "collaboration",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreateCollaboration"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/CollaborationResponse"
                        }
                    }
                }
            }
        },
        "/api/collaborations/{id}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "collaborations"
                ],
                "summary": "Get collaboration",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Collaboration ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/CollaborationResponse"
                        }
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "collaborations"
                ],
                "summary": "Update collaboration",
                "parameters": [
                    {
                        "description": "Collaboration data",
                        "name": "collaboration",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreateCollaboration"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/CollaborationResponse"
                        }
                    }
                }
            }
        },
        "/api/collaborations/{id}/interest": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "collaborations"
                ],
                "summary": "Express interest in a collaboration",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Collaboration ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "When user has blocked the bot, returns username for direct Telegram navigation",
                        "schema": {
                            "$ref": "#/definitions/BotBlockedResponse"
                        }
                    },
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/api/locations": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cities"
                ],
                "summary": "List cities",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CityResponse"
                            }
                        }
                    }
                }
            }
        },
        "/api/opportunities": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "opportunities"
                ],
                "summary": "List opportunities",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/OpportunityResponse"
                            }
                        }
                    }
                }
            }
        },
        "/api/users": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "List users",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Order by",
                        "name": "order",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Find similar",
                        "name": "find_similar",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/UserProfileResponse"
                            }
                        }
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Update user",
                "parameters": [
                    {
                        "description": "User data",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UpdateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/UserResponse"
                        }
                    }
                }
            }
        },
        "/api/users/avatar": {
            "post": {
                "description": "Upload a photo for the authenticated user to S3 and store record in database",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "photos"
                ],
                "summary": "Upload user photo",
                "parameters": [
                    {
                        "type": "file",
                        "description": "Photo file to upload",
                        "name": "photo",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/StatusResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/users/links": {
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Update user links",
                "parameters": [
                    {
                        "description": "User links data",
                        "name": "links",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UpdateUserLinksRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/UserResponse"
                        }
                    }
                }
            }
        },
        "/api/users/me": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get current user",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/UserResponse"
                        }
                    }
                }
            }
        },
        "/api/users/publish": {
            "post": {
                "description": "Makes the user profile visible by setting hidden_at to null",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Publish user profile",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/StatusResponse"
                        }
                    }
                }
            }
        },
        "/api/users/{id}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID or username",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/UserProfileResponse"
                        }
                    }
                }
            }
        },
        "/api/users/{id}/follow": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Follow user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID to follow",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "When user has blocked the bot, returns username for direct Telegram navigation",
                        "schema": {
                            "$ref": "#/definitions/BotBlockedResponse"
                        }
                    },
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/auth/telegram": {
            "post": {
                "description": "Authenticate user via Telegram using init data",
                "tags": [
                    "auth"
                ],
                "summary": "Telegram Auth",
                "parameters": [
                    {
                        "description": "Telegram Auth Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AuthTelegramRequest"
                        }
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "AdminAuthResponse": {
            "type": "object",
            "properties": {
                "admin": {
                    "$ref": "#/definitions/AdminResponse"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "AdminCreateCollaborationRequest": {
            "type": "object",
            "properties": {
                "badges": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "description": {
                    "type": "string"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Link"
                    }
                },
                "location": {
                    "type": "string"
                },
                "opportunity_id": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "AdminCreateUserRequest": {
            "type": "object",
            "properties": {
                "avatar_url": {
                    "type": "string"
                },
                "badges": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "chat_id": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Link"
                    }
                },
                "location": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "opportunity_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "title": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "AdminResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "AdminTelegramAuthRequest": {
            "type": "object",
            "properties": {
                "query": {
                    "description": "Telegram init data",
                    "type": "string"
                }
            }
        },
        "AuthTelegramRequest": {
            "type": "object",
            "properties": {
                "query": {
                    "type": "string"
                }
            }
        },
        "Badge": {
            "type": "object",
            "properties": {
                "color": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "icon": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "text": {
                    "type": "string"
                }
            }
        },
        "BadgeResponse": {
            "type": "object",
            "properties": {
                "color": {
                    "type": "string"
                },
                "icon": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "text": {
                    "type": "string"
                }
            }
        },
        "BotBlockedResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "City": {
            "type": "object",
            "properties": {
                "country_code": {
                    "type": "string"
                },
                "country_name": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "CityResponse": {
            "type": "object",
            "properties": {
                "country_code": {
                    "type": "string"
                },
                "country_name": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "Collaboration": {
            "type": "object",
            "properties": {
                "badges": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Badge"
                    }
                },
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "has_interest": {
                    "type": "boolean"
                },
                "hidden_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_payable": {
                    "type": "boolean"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Link"
                    }
                },
                "location": {
                    "$ref": "#/definitions/City"
                },
                "opportunity": {
                    "$ref": "#/definitions/Opportunity"
                },
                "title": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/User"
                },
                "user_id": {
                    "type": "string"
                },
                "verification_status": {
                    "$ref": "#/definitions/VerificationStatus"
                },
                "verified_at": {
                    "type": "string"
                }
            }
        },
        "CollaborationResponse": {
            "type": "object",
            "properties": {
                "badges": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BadgeResponse"
                    }
                },
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "has_interest": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "is_payable": {
                    "type": "boolean"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Link"
                    }
                },
                "location": {
                    "$ref": "#/definitions/CityResponse"
                },
                "opportunity": {
                    "$ref": "#/definitions/OpportunityResponse"
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/UserProfileResponse"
                },
                "user_id": {
                    "type": "string"
                },
                "verification_status": {
                    "$ref": "#/definitions/VerificationStatus"
                }
            }
        },
        "CreateBadgeRequest": {
            "type": "object",
            "properties": {
                "color": {
                    "type": "string"
                },
                "icon": {
                    "type": "string"
                },
                "text": {
                    "type": "string"
                }
            }
        },
        "CreateCollaboration": {
            "type": "object",
            "properties": {
                "badge_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "description": {
                    "type": "string"
                },
                "is_payable": {
                    "type": "boolean"
                },
                "location_id": {
                    "type": "string"
                },
                "opportunity_id": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "Link": {
            "type": "object",
            "properties": {
                "icon": {
                    "description": "Optional icon for the link",
                    "type": "string"
                },
                "label": {
                    "type": "string"
                },
                "order": {
                    "type": "integer"
                },
                "type": {
                    "description": "e.g., \"github\", \"linkedin\", \"website\", \"portfolio\"",
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "LoginMeta": {
            "type": "object",
            "properties": {
                "city": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "ip": {
                    "type": "string"
                },
                "user_agent": {
                    "type": "string"
                }
            }
        },
        "Opportunity": {
            "type": "object",
            "properties": {
                "color": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "description_ru": {
                    "type": "string"
                },
                "icon": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "text": {
                    "type": "string"
                },
                "text_ru": {
                    "type": "string"
                }
            }
        },
        "OpportunityResponse": {
            "type": "object",
            "properties": {
                "color": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "icon": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "text": {
                    "type": "string"
                }
            }
        },
        "StatusResponse": {
            "type": "object",
            "properties": {
                "success": {
                    "type": "boolean"
                }
            }
        },
        "UpdateUserLinksRequest": {
            "type": "object",
            "properties": {
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Link"
                    }
                }
            }
        },
        "UpdateUserRequest": {
            "type": "object",
            "properties": {
                "badge_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "description": {
                    "type": "string"
                },
                "location_id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "opportunity_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "User": {
            "type": "object",
            "properties": {
                "avatar_url": {
                    "type": "string"
                },
                "badges": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Badge"
                    }
                },
                "chat_id": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "hidden_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_following": {
                    "type": "boolean"
                },
                "language_code": {
                    "type": "string"
                },
                "last_active_at": {
                    "type": "string"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Link"
                    }
                },
                "location": {
                    "$ref": "#/definitions/City"
                },
                "login_metadata": {
                    "$ref": "#/definitions/LoginMeta"
                },
                "name": {
                    "type": "string"
                },
                "opportunities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Opportunity"
                    }
                },
                "title": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                },
                "verification_status": {
                    "$ref": "#/definitions/VerificationStatus"
                },
                "verified_at": {
                    "type": "string"
                }
            }
        },
        "UserProfileResponse": {
            "type": "object",
            "properties": {
                "avatar_url": {
                    "type": "string"
                },
                "badges": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BadgeResponse"
                    }
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_following": {
                    "type": "boolean"
                },
                "last_active_at": {
                    "type": "string"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Link"
                    }
                },
                "location": {
                    "$ref": "#/definitions/CityResponse"
                },
                "name": {
                    "type": "string"
                },
                "opportunities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/OpportunityResponse"
                    }
                },
                "title": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "UserResponse": {
            "type": "object",
            "properties": {
                "avatar_url": {
                    "type": "string"
                },
                "badges": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BadgeResponse"
                    }
                },
                "chat_id": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "hidden_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "language_code": {
                    "type": "string"
                },
                "last_active_at": {
                    "type": "string"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Link"
                    }
                },
                "location": {
                    "$ref": "#/definitions/CityResponse"
                },
                "name": {
                    "type": "string"
                },
                "opportunities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/OpportunityResponse"
                    }
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                },
                "verification_status": {
                    "$ref": "#/definitions/VerificationStatus"
                }
            }
        },
        "VerificationStatus": {
            "type": "string",
            "enum": [
                "pending",
                "verified",
                "denied",
                "blocked",
                "unverified"
            ],
            "x-enum-varnames": [
                "VerificationStatusPending",
                "VerificationStatusVerified",
                "VerificationStatusDenied",
                "VerificationStatusBlocked",
                "VerificationStatusUnverified"
            ]
        },
        "VerificationUpdateRequest": {
            "type": "object",
            "properties": {
                "status": {
                    "$ref": "#/definitions/VerificationStatus"
                }
            }
        }
    }
}